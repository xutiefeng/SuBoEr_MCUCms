C51 COMPILER V9.60.0.0   U8X8_SETUP                                                        10/18/2024 17:39:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE U8X8_SETUP
OBJECT MODULE PLACED IN .\Objects\u8x8_setup.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\u8g2\u8x8_setup.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Libary\Devi
                    -ce\CMS8S6990\Include;..\Libary\StdDriver\inc;..\code;..\u8g2;..\GUI) DEBUG PRINT(.\Listings\u8x8_setup.lst) TABS(2) OBJE
                    -CT(.\Objects\u8x8_setup.obj)

line level    source

   1          #include "u8x8.h"
   2          
   3          uint8_t u8x8_dummy_cb(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8
             -_UNUSED void *arg_ptr)
   4          {
   5   1        return 0;
   6   1      }
*** WARNING C280 IN LINE 3 OF ..\u8g2\u8x8_setup.c: 'u8x8': unreferenced local variable
*** WARNING C280 IN LINE 3 OF ..\u8g2\u8x8_setup.c: 'msg': unreferenced local variable
*** WARNING C280 IN LINE 3 OF ..\u8g2\u8x8_setup.c: 'arg_int': unreferenced local variable
*** WARNING C280 IN LINE 3 OF ..\u8g2\u8x8_setup.c: 'arg_ptr': unreferenced local variable
   7          
   8          
   9          static const u8x8_display_info_t u8x8_null_display_info =
  10          {
  11            /* chip_enable_level = */ 0,
  12            /* chip_disable_level = */ 1,
  13            
  14            /* post_chip_enable_wait_ns = */ 0,
  15            /* pre_chip_disable_wait_ns = */ 0,
  16            /* reset_pulse_width_ms = */ 0, 
  17            /* post_reset_wait_ms = */ 0, 
  18            /* sda_setup_time_ns = */ 0,    
  19            /* sck_pulse_width_ns = */ 0, /* half of cycle time (100ns according to datasheet), AVR: below 70: 8 MHz
             -, >= 70 --> 4MHz clock */
  20            /* sck_clock_hz = */ 4000000UL, /* since Arduino 1.6.0, the SPI bus speed in Hz. Should be  1000000000/s
             -ck_pulse_width_ns */
  21            /* spi_mode = */ 0,   /* active high, rising edge */
  22            /* i2c_bus_clock_100kHz = */ 4,
  23            /* data_setup_time_ns = */ 0,
  24            /* write_pulse_width_ns = */ 0,
  25            /* tile_width = */ 1,   /* 8x8 */
  26            /* tile_hight = */ 1,
  27            /* default_x_offset = */ 0,
  28            /* flipmode_x_offset = */ 0,
  29            /* pixel_width = */ 8,
  30            /* pixel_height = */ 8
  31          };
  32          
  33          
  34          /* a special null device */
  35          uint8_t u8x8_d_null_cb(u8x8_t *u8x8, uint8_t msg, U8X8_UNUSED uint8_t arg_int, U8X8_UNUSED void *arg_ptr)
  36          {
  37   1        switch(msg)
  38   1        {
  39   2          case U8X8_MSG_DISPLAY_SETUP_MEMORY:
  40   2            u8x8_d_helper_display_setup_memory(u8x8, &u8x8_null_display_info);
  41   2            break;
  42   2          case U8X8_MSG_DISPLAY_INIT:
  43   2            u8x8_d_helper_display_init(u8x8);
  44   2            break;
  45   2        }
  46   1        /* the null device callback will succeed for all messages */
C51 COMPILER V9.60.0.0   U8X8_SETUP                                                        10/18/2024 17:39:27 PAGE 2   

  47   1        return 1;
  48   1      }
*** WARNING C280 IN LINE 35 OF ..\u8g2\u8x8_setup.c: 'arg_int': unreferenced local variable
*** WARNING C280 IN LINE 35 OF ..\u8g2\u8x8_setup.c: 'arg_ptr': unreferenced local variable
  49          
  50          
  51          /*
  52            Description:
  53              Setup u8x8
  54            Args:
  55              u8x8  An empty u8x8 structure
  56          */
  57          void u8x8_SetupDefaults(u8x8_t *u8x8)
  58          {
  59   1          u8x8->display_info = NULL;
  60   1          u8x8->display_cb = u8x8_dummy_cb;
  61   1          u8x8->cad_cb = u8x8_dummy_cb;
  62   1          u8x8->byte_cb = u8x8_dummy_cb;
  63   1          u8x8->gpio_and_delay_cb = u8x8_dummy_cb;
  64   1          u8x8->is_font_inverse_mode = 0;
  65   1          //u8x8->device_address = 0;
  66   1          u8x8->utf8_state = 0;   /* also reset by u8x8_utf8_init */
  67   1          u8x8->bus_clock = 0;    /* issue 769 */
  68   1          u8x8->i2c_address = 255;
  69   1          u8x8->debounce_default_pin_state = 255; /* assume all low active buttons */
  70   1        
  71   1      #ifdef U8X8_USE_PINS 
                {
                  uint8_t i;
                  for( i = 0; i < U8X8_PIN_CNT; i++ )
                    u8x8->pins[i] = U8X8_PIN_NONE;
                }
              #endif
  78   1      }
  79          
  80          
  81          /*
  82            Description:
  83              Setup u8x8 and assign the callback function. The dummy 
  84              callback "u8x8_dummy_cb" can be used, if no callback is required.
  85              This setup will not communicate with the display itself.
  86              Use u8x8_InitDisplay() to send the startup code to the Display.
  87            Args:
  88              u8x8        An empty u8x8 structure
  89              display_cb      Display/controller specific callback function
  90              cad_cb        Display controller specific communication callback function
  91              byte_cb     Display controller/communication specific callback funtion
  92              gpio_and_delay_cb Environment specific callback function
  93          
  94          */
  95          void u8x8_Setup(u8x8_t *u8x8, u8x8_msg_cb display_cb, u8x8_msg_cb cad_cb, u8x8_msg_cb byte_cb, u8x8_msg_cb
             - gpio_and_delay_cb)
  96          {
  97   1        /* setup defaults and reset pins to U8X8_PIN_NONE */
  98   1        u8x8_SetupDefaults(u8x8);
  99   1      
 100   1        /* setup specific callbacks */
 101   1        u8x8->display_cb = display_cb;
 102   1        u8x8->cad_cb = cad_cb;
 103   1        u8x8->byte_cb = byte_cb;
 104   1        u8x8->gpio_and_delay_cb = gpio_and_delay_cb;
 105   1      
C51 COMPILER V9.60.0.0   U8X8_SETUP                                                        10/18/2024 17:39:27 PAGE 3   

 106   1        /* setup display info */
 107   1        u8x8_SetupMemory(u8x8);
 108   1      }
 109          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    340    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      34
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
