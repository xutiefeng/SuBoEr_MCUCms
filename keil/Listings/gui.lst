C51 COMPILER V9.60.0.0   GUI                                                               10/18/2024 17:50:27 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GUI
OBJECT MODULE PLACED IN .\Objects\gui.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\GUI\gui.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Libary\Device\CMS8S
                    -6990\Include;..\Libary\StdDriver\inc;..\code;..\u8g2;..\GUI) DEBUG PRINT(.\Listings\gui.lst) TABS(2) OBJECT(.\Objects\gu
                    -i.obj)

line level    source

   1          //#include "gui.h"
   2          //#include <string.h>
   3          //#include "gui_material.h"
   4          
   5          //#define LCD_HEIGHT 128
   6          //#define LCD_WIDTH  64
   7          ////u8 DispVirRAM[LCD_HEIGHT / 8][LCD_WIDTH];
   8          //u8 DispVirRAM[LCD_HEIGHT / 8][LCD_WIDTH];
   9          //u8 wallRAM[LCD_HEIGHT / 8 - 1][LCD_WIDTH];
  10          //static const u8  Mask[8] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  11          
  12          //#define POINT     DispVirRAM[y/8][x]
  13          //#define PMASK     Mask[y&0x07]
  14          
  15          //void Clr_DispRAM(void)
  16          //{
  17          //  memset(DispVirRAM, 0, sizeof(DispVirRAM));
  18          //}
  19          //void Clr_DispRAM_Statusbar(void)
  20          //{
  21          //  memset(DispVirRAM, 0, LCD_WIDTH*2);
  22          //}
  23          //void Clr_DispRAM_Content(void)
  24          //{
  25          //  memset(&DispVirRAM[2][0], 0, sizeof(DispVirRAM) - LCD_WIDTH*2);
  26          //}
  27          
  28          //void Fill_DispRAM(u8 a)
  29          //{
  30          //  memset(DispVirRAM, a, sizeof(DispVirRAM));
  31          //}
  32          
  33          
  34          //void GUI_DrawPoint(short x, short y, u8 color)
  35          //{
  36          //  if(y > LCD_HEIGHT - 1 || x > LCD_WIDTH - 1) {
  37          //    return;
  38          //  }
  39          
  40          //  if(color == 1) {
  41          //    POINT |= PMASK;
  42          //  } else if(color == 0) {
  43          //    POINT &= ~PMASK;
  44          //  } else {
  45          //    POINT ^= PMASK;
  46          //  }
  47          //}
  48          
  49          
  50          //void GUI_HLine(uint16_t x0, uint16_t x1, uint16_t y, u8 color)
  51          //{
  52          //  if(x0 > x1) {
  53          //    while(1);//SWAP(x0, x1);
C51 COMPILER V9.60.0.0   GUI                                                               10/18/2024 17:50:27 PAGE 2   

  54          //  }
  55          
  56          //  do {
  57          //    GUI_DrawPoint(x0, y, color);
  58          //    x0++;
  59          //  } while(x1 >= x0);
  60          //}
  61          
  62          
  63          //void GUI_RLine(uint16_t x, uint16_t y0, uint16_t y1, u8 color)
  64          //{
  65          //  if(y0 > y1) {
  66          //    while(1);//SWAP(y0, y1);
  67          //  }
  68          //  do {
  69          //    GUI_DrawPoint(x, y0, color);
  70          //    y0++;
  71          //  } while(y1 >= y0);
  72          //}
  73          
  74          //void GUI_Rectangle_Fill(uint16_t x0, uint16_t y0, uint16_t width, uint16_t high, u8 color)
  75          //{
  76          //  uint16_t x1, y1;
  77          
  78          //  x1 = x0 + width - 1;
  79          //  y1 = y0 + high - 1;
  80          
  81          //  if(x0 > x1) {
  82          //    while(1);//SWAP(x0, x1);
  83          //  }
  84          //  if(y0 > y1) {
  85          //    while(1);//SWAP(y0, y1);
  86          //  }
  87          
  88          //  if(y0 == y1) {
  89          //    GUI_HLine(x0, x1, y0, color);
  90          //    return;
  91          //  }
  92          //  if(x0 == x1) {
  93          //    GUI_RLine(x0, y0, y1, color);
  94          //    return;
  95          //  }
  96          
  97          //  while(y0 <= y1) {
  98          //    GUI_HLine(x0, x1, y0, color);
  99          //    y0++;
 100          //  }
 101          //}
 102          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
C51 COMPILER V9.60.0.0   GUI                                                               10/18/2024 17:50:27 PAGE 3   

   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
