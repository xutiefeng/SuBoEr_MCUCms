C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ISR
OBJECT MODULE PLACED IN .\Objects\isr.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\code\isr.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Libary\Device\CMS8
                    -S6990\Include;..\Libary\StdDriver\inc;..\code;..\u8g2;..\GUI) DEBUG PRINT(.\Listings\isr.lst) TABS(2) OBJECT(.\Objects\i
                    -sr.obj)

line level    source

   1          /*******************************************************************************
   2          * Copyright (C) 2019 China Micro Semiconductor Limited Company. All Rights Reserved.
   3          *
   4          * This software is owned and published by:
   5          * CMS LLC, No 2609-10, Taurus Plaza, TaoyuanRoad, NanshanDistrict, Shenzhen, China.
   6          *
   7          * BY DOWNLOADING, INSTALLING OR USING THIS SOFTWARE, YOU AGREE TO BE BOUND
   8          * BY ALL THE TERMS AND CONDITIONS OF THIS AGREEMENT.
   9          *
  10          * This software contains source code for use with CMS
  11          * components. This software is licensed by CMS to be adapted only
  12          * for use in systems utilizing CMS components. CMS shall not be
  13          * responsible for misuse or illegal use of this software for devices not
  14          * supported herein. CMS is providing this software "AS IS" and will
  15          * not be responsible for issues arising from incorrect user implementation
  16          * of the software.
  17          *
  18          * This software may be replicated in part or whole for the licensed use,
  19          * with the restriction that this Disclaimer and Copyright notice must be
  20          * included with each copy of this software, whether used in part or whole,
  21          * at all times.
  22          */
  23          
  24          /****************************************************************************/
  25          /** \file isr.c
  26          **
  27          ** 
  28          **
  29          **  History:
  30          **    
  31          *****************************************************************************/
  32          /****************************************************************************/
  33          /*  include files
  34          *****************************************************************************/
  35          #include "cms8s6990.h"
  36          
  37          /****************************************************************************/
  38          /*  Local pre-processor symbols('#define')
  39          ****************************************************************************/
  40          
  41          /****************************************************************************/
  42          /*  Global variable definitions(declared in header file with 'extern')
  43          ****************************************************************************/
  44          
  45          /****************************************************************************/
  46          /*  Local type definitions('typedef')
  47          ****************************************************************************/
  48          
  49          /****************************************************************************/
  50          /*  Local variable  definitions('static')
  51          ****************************************************************************/
  52          
  53          
C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 2   

  54          /****************************************************************************/
  55          /*  Local function prototypes('static')
  56          ****************************************************************************/
  57          
  58          
  59          /****************************************************************************/
  60          /*  Function implementation - global ('extern') and local('static')
  61          ****************************************************************************/
  62          
  63          
  64          /******************************************************************************
  65           ** \brief   INT0 interrupt service function
  66           **     
  67           ** \param [in]  none   
  68           **
  69           ** \return none
  70           ******************************************************************************/
  71          void INT0_IRQHandler(void)  interrupt INT0_VECTOR
  72          {
  73   1      
  74   1      }
  75          /******************************************************************************
  76           ** \brief   Timer 0 interrupt service function
  77           **
  78           ** \param [in]  none   
  79           **
  80           ** \return none
  81          ******************************************************************************/
  82          void Timer0_IRQHandler(void)  interrupt TMR0_VECTOR 
  83          {
  84   1      
  85   1      }
  86          /******************************************************************************
  87           ** \brief   INT0 interrupt service function
  88           **     
  89           ** \param [in]  none   
  90           **
  91           ** \return none
  92           ******************************************************************************/
  93          void INT1_IRQHandler(void)  interrupt INT1_VECTOR
  94          {
  95   1        ;
  96   1      }
  97          /******************************************************************************
  98           ** \brief   Timer 1 interrupt service function
  99           **
 100           ** \param [in]  none   
 101           **
 102           ** \return none
 103          ******************************************************************************/
 104          void Timer1_IRQHandler(void)  interrupt TMR1_VECTOR 
 105          {
 106   1      
 107   1      }
 108          /******************************************************************************
 109           ** \brief   UART 0 interrupt service function
 110           **
 111           ** \param [in]  none   
 112           **
 113           ** \return none
 114          ******************************************************************************/
 115          void UART0_IRQHandler(void)  interrupt UART0_VECTOR 
C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 3   

 116          {
 117   1      
 118   1      }
 119          /******************************************************************************
 120           ** \brief   Timer 2 interrupt service function
 121           **
 122           ** \param [in]  none   
 123           **
 124           ** \return none
 125          ******************************************************************************/
 126          void Timer2_IRQHandler(void)  interrupt TMR2_VECTOR 
 127          {
 128   1        
 129   1      }
 130          /******************************************************************************
 131           ** \brief   UART 1 interrupt service function
 132           **
 133           ** \param [in]  none   
 134           **
 135           ** \return none
 136          ******************************************************************************/
 137          void UART1_IRQHandler(void)  interrupt UART1_VECTOR 
 138          {
 139   1        ;
 140   1      }
 141          /******************************************************************************
 142           ** \brief   GPIO 0 interrupt service function
 143           ** 
 144           ** \param [in]  none   
 145           **
 146           ** \return none
 147           ******************************************************************************/
 148          void P0EI_IRQHandler(void)  interrupt P0EI_VECTOR 
 149          {
 150   1        
 151   1      }
 152          /******************************************************************************
 153           ** \brief   GPIO 1 interrupt service function
 154           **
 155           ** \param [in]  none   
 156           **
 157           ** \return none
 158           ******************************************************************************/
 159          void P1EI_IRQHandler(void)  interrupt P1EI_VECTOR 
 160          {
 161   1        ;
 162   1      }
 163          /******************************************************************************
 164           ** \brief   GPIO 2 interrupt service function
 165           **
 166           ** \param [in]  none   
 167           **
 168           ** \return none
 169           ******************************************************************************/
 170          void P2EI_IRQHandler(void)  interrupt P2EI_VECTOR 
 171          {
 172   1      
 173   1      }
 174          /******************************************************************************
 175           ** \brief   GPIO 3 interrupt service function
 176           **
 177           ** \param [in]  none   
C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 4   

 178           **
 179           ** \return none
 180           ******************************************************************************/
 181          void P3EI_IRQHandler(void)  interrupt P3EI_VECTOR 
 182          {
 183   1        ;
 184   1      }
 185          
 186          /******************************************************************************
 187           ** \brief   LVD interrupt service function
 188           **
 189           ** \param [in]  none   
 190           **
 191           ** \return none
 192           ******************************************************************************/
 193          void LVD_IRQHandler(void)  interrupt LVD_VECTOR 
 194          {
 195   1      
 196   1      }
 197          /******************************************************************************
 198           ** \brief   LSE interrupt service function
 199           **
 200           ** \param [in]  none   
 201           **
 202           ** \return none
 203           ******************************************************************************/
 204          void LSE_IRQHandler(void)  interrupt LSE_VECTOR 
 205          {
 206   1      
 207   1      }
 208          
 209          /********************************************************************************
 210           ** \brief   ACMP interrupt service function
 211           **     
 212           ** \param [in]  none   
 213           **
 214           ** \return none
 215           ******************************************************************************/
 216          void ACMP_IRQHandler(void)  interrupt ACMP_VECTOR 
 217          {
 218   1        
 219   1      }
 220          /******************************************************************************
 221           ** \brief   Timer 3 interrupt service function
 222           **
 223           ** \param [in]  none   
 224           **
 225           ** \return none
 226          ******************************************************************************/
 227          void Timer3_IRQHandler(void)  interrupt TMR3_VECTOR 
 228          {
 229   1      
 230   1      }
 231          /******************************************************************************
 232           ** \brief   Timer 4 interrupt service function
 233           **
 234           ** \param [in]  none   
 235           **
 236           ** \return none
 237          ******************************************************************************/
 238          void Timer4_IRQHandler(void)  interrupt TMR4_VECTOR 
 239          {
C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 5   

 240   1      
 241   1      }
 242          /******************************************************************************
 243           ** \brief   EPWM interrupt service function
 244           **
 245           ** \param [in]  none   
 246           **
 247           ** \return none
 248           ******************************************************************************/
 249          void EPWM_IRQHandler(void)  interrupt EPWM_VECTOR
 250          {
 251   1      
 252   1      }
 253          /******************************************************************************
 254           ** \brief   ADC interrupt service function
 255           **
 256           ** \param [in]  none   
 257           **
 258           ** \return none
 259           ******************************************************************************/
 260          void ADC_IRQHandler(void)  interrupt ADC_VECTOR 
 261          {
 262   1      
 263   1      }
 264          /******************************************************************************
 265           ** \brief   WDT interrupt service function
 266           **
 267           ** \param [in]  none   
 268           **
 269           ** \return none
 270           ******************************************************************************/
 271          void WDT_IRQHandler(void)  interrupt WDT_VECTOR 
 272          {
 273   1      
 274   1      }
 275          /******************************************************************************
 276           ** \brief  I2C interrupt service function
 277           **
 278           ** \param [in]  none   
 279           **
 280           ** \return none
 281           ******************************************************************************/
 282          void I2C_IRQHandler(void)  interrupt I2C_VECTOR 
 283          {
 284   1        ;
 285   1      }
 286          /******************************************************************************
 287           ** \brief  SPI interrupt service function
 288           **
 289           ** \param [in]  none   
 290           **
 291           ** \return none
 292           ******************************************************************************/
 293          void SPI_IRQHandler(void)  interrupt SPI_VECTOR 
 294          {
 295   1        ;
 296   1      }
 297          
 298          
 299          
 300          
 301          
C51 COMPILER V9.60.0.0   ISR                                                               10/18/2024 17:50:25 PAGE 6   

 302          
 303          
 304          
 305          
 306          
 307          
 308          
 309          
 310          
 311          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     84    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
